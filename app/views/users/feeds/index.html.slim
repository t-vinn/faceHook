h1 個人投稿
//個人の投稿には公開・フォロワーのみ・非公開の3つがある。

ul.nav.nav-tabs
  li.nav-item
    a.nav-link href='#all' data-toggle='tab' All
  li.nav-item
    a.nav-link href='#following' data-toggle='tab' Following

.tab-content
  .tab-pane.active#all
    table
      thead
        tr
          th name
          th content
          th posted_at
          th reply
          th favorite
          th favorite counter
      tbody
        - @feeds_or_group_posts.each do |post|
          tr
            td = post.user.name
            td = post[:content]
            td = post[:created_at]
            - if post.is_a?(Feed)
              td = link_to 'Reply', new_users_feed_reply_path(post)
              - if post[:user_id] == current_user.id
                td = link_to 'Edit privacy', edit_users_feed_path(post)
              - elsif post.feed_favorites.exists?(user_id: current_user.id)
                td = link_to 'Remove Favorite',
                  users_feed_feed_favorite_path(post, @feed_favorites_index_by_feed_id[post.id]),
                  method: :delete
              - else
                td = link_to 'Favorite', users_feed_feed_favorites_path(post),
                    method: :post
              td = post.feed_favorites.count
              - post.replies.each do |reply|
                tr
                  td = reply.user.name
                  td = '[REPLY]---> ' + reply.content.to_s
                  td = reply.created_at
                  // Can't reply to replies. Can only reply to feeds.
                  td *
                  - if reply.user_id == current_user.id
                    // Can't like your own reply.
                    td *
                  - elsif reply.reply_favorites.exists?(user_id: current_user.id)
                    td = link_to 'Remove Favorite',
                      users_feed_reply_reply_favorite_path(post, reply, @reply_favorites_index_by_reply_id[reply.id]),
                      method: :delete
                  - else
                    td = link_to 'Favorite', users_feed_reply_reply_favorites_path(post, reply),
                        method: :post
                  td = reply.reply_favorites.count
            - else
              td *
              - if post[:user_id] == current_user.id
                td *
              - elsif post.group_post_favorites.exists?(user_id: current_user.id)
                td = link_to 'Remove Favorite',
                  users_group_group_post_group_post_favorite_path(post.group,
                                                                  post,
                                                                  @group_post_favorites_index_by_group_post_id[post.id]),
                  method: :delete
              - else
                td = link_to 'Favorite', users_group_group_post_group_post_favorites_path(post.group, post),
                    method: :post
              td = post.group_post_favorites.count

  .tab-pane#following
    table
      thead
        tr
          th name
          th content
          th posted_at
          th reply
          th favorite
          th favorite counter
      tbody
        - @following_feeds_or_group_posts.each do |post|
          tr
            td = post.user.name
            td = post[:content]
            td = post[:created_at]
            - if post.is_a?(Feed)
              td = link_to 'Reply', new_users_feed_reply_path(post)
              - if post[:user_id] == current_user.id
                td = link_to 'Edit privacy', edit_users_feed_path(post)
              - elsif post.feed_favorites.exists?(user_id: current_user.id)
                td = link_to 'Remove Favorite',
                  users_feed_feed_favorite_path(post, @feed_favorites_index_by_feed_id[post.id]),
                  method: :delete
              - else
                td = link_to 'Favorite', users_feed_feed_favorites_path(post),
                    method: :post
              td = post.feed_favorites.count
              - post.replies.each do |reply|
                tr
                  td = reply.user.name
                  td = '[REPLY]---> ' + reply.content.to_s
                  td = reply.created_at
                  // Can't reply to replies. Can only reply to feeds.
                  td *
                  - if reply.user_id == current_user.id
                    // Can't like your own reply.
                    td *
                  - elsif reply.reply_favorites.exists?(user_id: current_user.id)
                    td = link_to 'Remove Favorite',
                      users_feed_reply_reply_favorite_path(post, reply, @reply_favorites_index_by_reply_id[reply.id]),
                      method: :delete
                  - else
                    td = link_to 'Favorite', users_feed_reply_reply_favorites_path(post, reply),
                        method: :post
                  td = reply.reply_favorites.count
            - else
              td *
              - if post[:user_id] == current_user.id
                td *
              - elsif post.group_post_favorites.exists?(user_id: current_user.id)
                td = link_to 'Remove Favorite',
                  users_group_group_post_group_post_favorite_path(post.group,
                                                                  post,
                                                                  @group_post_favorites_index_by_group_post_id[post.id]),
                  method: :delete
              - else
                td = link_to 'Favorite', users_group_group_post_group_post_favorites_path(post.group, post),
                    method: :post
              td = post.group_post_favorites.count

  br
hr

//フィード新規投稿フォーム
= render partial: 'form', locals: { feed: @feed }
hr
= link_to 'Back', root_path

p * フィードの返信やグループ内の投稿には返信できないので、元の投稿に返信してください。種類を問わず自分の投稿にはファボできません。
