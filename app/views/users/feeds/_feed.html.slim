tbody.post
  tr
    td rowspan='4' = image_tag feed.user.picture.url(:thumb)
    td = link_to feed.user.name, users_user_path(feed.user)
    td colspan='3' = time_ago_in_words(feed.created_at) + ' ago'
  tr
    td colspan='4' style="word-break:break-word;" = feed.content
  tr
    td.picture colspan='4'
      - if feed.feed_pictures.exists?
        - feed.feed_pictures.each do |p|
          = image_tag p.picture
  tr
    td = link_to 'Reply', new_users_feed_reply_path(feed)
    td = feed.replies.count
    - if feed.user_id == current_user.id
      td = link_to 'Edit privacy', edit_users_feed_path(feed)
    - elsif feed.feed_favorites.exists?(user_id: current_user.id)
      td = link_to 'Remove Favorite',
        users_feed_feed_favorite_path(feed, @feed_favorites_index_by_feed_id[feed.id]),
        method: :delete
    - else
      td = link_to 'Favorite', users_feed_feed_favorites_path(feed),
          method: :post
    td = feed.feed_favorites.count
    - feed.replies.each do |reply|
      tr
        td rowspan='4'
        td = link_to reply.user.name, users_user_path(reply.user)
        td colspan='3' = time_ago_in_words(reply.created_at) + ' ago'
      tr
        td colspan='4' style="word-break:break-word;" = '[REPLY]---> ' + reply.content
      tr
        td.picture colspan='4'
          - if reply.reply_pictures.exists?
            - reply.reply_pictures.each do |p|
              = image_tag p.picture
      tr
        // Can't reply to replies. Can only reply to feeds.
        td colspan = '2'
        - if reply.user_id == current_user.id
          // Can't like your own reply.
          td *
        - elsif reply.reply_favorites.exists?(user_id: current_user.id)
          td = link_to 'Remove Favorite',
            users_feed_reply_reply_favorite_path(feed, reply,
              @reply_favorites_index_by_reply_id[reply.id]),
            method: :delete
        - else
          td = link_to 'Favorite', users_feed_reply_reply_favorites_path(feed, reply),
              method: :post
        td = reply.reply_favorites.count
